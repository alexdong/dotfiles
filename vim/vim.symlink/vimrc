"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Maintainer: amix the lucky stiff
"             http://amix.dk - amix@amix.dk
"
" Version: 3.3 - 21/01/10 01:05:46
"
" Blog_post: 
"       http://amix.dk/blog/post/19486#The-ultimate-vim-configuration-vimrc
"
" How_to_Install:
"    $ mkdir ~/.vim_runtime
"    $ svn co svn://orangoo.com/vim ~/.vim_runtime
"    $ cat ~/.vim_runtime/install.sh
"    $ sh ~/.vim_runtime/install.sh <system>
"      <sytem> can be `mac`, `linux` or `windows`
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => General
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Sets how many lines of history VIM has to remember
set history=3000

"Running vim, not Vi
set nocompatible

" Auto-reload buffers
set autoread

" Display the cursor line. 
set cursorline

" With a map leader it's possible to do extra key combinations
" like <leader>w saves the current file
let mapleader = ","
let g:mapleader = ","

" j j to exit from insert mode 
imap jj <esc>

" Fast saving
nmap <leader>w :w!<cr>


""""""""""""""""""""""""""""""
" => Statusline
""""""""""""""""""""""""""""""
if has('statusline')
    set laststatus=2
    set statusline=%<%f\   " Filename
    set statusline+=%w%h%m%r " Options
    set statusline+=\ [%{&ff}/%Y]            " filetype
    set statusline+=\ [%{getcwd()}]          " current dir
    set statusline+=%=%-14.(%l,%c%V%)\ %p%%  " Right aligned file nav info
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM user interface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Set 7 lines to the curors - when moving vertical..
set so=7

set wildmenu "Turn on WiLd menu

set ruler "Always show current position

set cmdheight=1 "The commandbar height

set hid "Change buffer - without saving

" Set backspace config
set backspace=eol,start,indent

set ignorecase "Ignore case when searching
set hlsearch "Highlight search things
set incsearch "Make search act like search in modern browsers
nmap <silent> <leader>/ :nohlsearch<CR> "Clearing highlight search

set gdefault " the /g flag on :s substitution is on by default. 
set magic "Set magic on, for regular expressions

set showmatch "Show matching bracets when text indicator is over them
set mat=2 "How many tenths of a second to blink

set nu "Show line number
set cf   " Enable error files & error jumping.
set clipboard+=unnamed " Yanks go on clipboard instead

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Text, tab and indent related
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set expandtab
set shiftwidth=4
set tabstop=4
set smarttab

map <leader>t2 :setlocal shiftwidth=2<cr>
map <leader>t4 :setlocal shiftwidth=4<cr>
map <leader>t8 :setlocal shiftwidth=4<cr>
set cindent
set nocp "No compatible
set wrap "Wrap lines
set lbr
set wrapscan " Set the search scan to wrap lines"

" No sound on errors
set noerrorbells
set novisualbell

" Filetype detection, indenting and plugins
filetype on
filetype indent on 
filetype plugin on


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Colors and Fonts
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
syntax enable "Enable syntax hl

" Set font according to system
" set gfn=Courier\ New:h12
" set gfn=Consolas:h11
set gfn=Monaco:h12
set shell=/bin/zsh

if has("gui_running")
  set guioptions-=T
  set background=dark
  set t_Co=256
  set background=dark
  colorscheme darkblue "torte borland buttercream  guardian  peaksea
else
  colorscheme zellner
  set background=dark
endif

set encoding=utf8
set ffs=unix,dos,mac "Default file types


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Files and backups
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Turn backup off, since most stuff is in SVN, git anyway...
set nobackup
set nowb
set noswapfile

" For when you forget to sudo.. Really Write the file.
cmap w!! w !sudo tee % >/dev/null

""""""""""""""""""""""""""""""
" => Visual mode related
""""""""""""""""""""""""""""""


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Command mode related
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Smart mappings on the command line
cno $h e ~/
cno $d e ~/Desktop/
cno $c e ./
cno $p e ../

" Bash like keys for the command line
cnoremap <C-A>		<Home>
cnoremap <C-E>		<End>
cnoremap <C-K>		<C-U>
cnoremap <C-P> <Up>
cnoremap <C-N> <Down>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Moving around, tabs and buffers
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
noremap <space> <c-f>
noremap <silent> <leader><cr> :noh<cr>

" Smart way to move btw. windows
noremap <C-j> <C-W>j
noremap <C-k> <C-W>k
noremap <C-h> <C-W>h
noremap <C-l> <C-W>l

" Use the arrows to something usefull
map <right> :bn<cr>
map <left> :bp<cr>


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Editing mappings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Remap VIM 0 and disable ^ to train the finger
noremap 0 ^
noremap ^ <nop>


"Move a line of text using ALT+[jk] or Comamnd+[jk] on mac
nmap <M-j> mz:m+<cr>`z
nmap <M-k> mz:m-2<cr>`z
vmap <M-j> :m'>+<cr>`<my`>mzgv`yo`z
vmap <M-k> :m'<-2<cr>`>my`<mzgv`yo`z

nmap <D-j> <M-j>
nmap <D-k> <M-k>
vmap <D-j> <M-j>
vmap <D-k> <M-k>

""""""""""""""""""""""""""""""
" => Ruby on Rails
""""""""""""""""""""""""""""""

" Use rubycomplete. Turn it on for ruby buffer, 
" auto rails support and include
" classes in the list. 
autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete
autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1
autocmd FileType ruby,eruby let g:rubycomplete_rails = 1
autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1
autocmd FileType ruby compiler ruby
imap <S-CR>    <CR><CR>end<Esc>-cc

autocmd FileType ruby compiler ruby
au FileType ruby call RubySettings()
function! RubySettings()
  set shiftwidth=4  " Tabs under smart indent
  set cinoptions=:0,p0,t0
  set cinwords=if,else,while,do,for,switch,case
  set formatoptions=tcqr
  set cindent
endfunction
"
""""""""""""""""""""""""""""""
" => Markdown section
""""""""""""""""""""""""""""""
au BufRead,BufNewFile *.md set filetype=markdown
"
""""""""""""""""""""""""""""""
" => Less section
""""""""""""""""""""""""""""""
au BufRead,BufNewFile *.less set filetype=less


""""""""""""""""""""""""""""""
" => Python section
""""""""""""""""""""""""""""""
au FileType python call PythonSettings()
function! PythonSettings()
    let python_highlight_all = 1
    " autocmd FileType python compiler pylint
    au FileType python syn keyword pythonDecorator True None False self
    set ts=4  " Tabs are 4 spaces
    set shiftwidth=4  " Tabs under smart indent
    set cinoptions=:0,p0,t0
    set cinwords=if,else,while,do,for,switch,case
    set formatoptions=tcqr
    set cindent
endfunction


""""""""""""""""""""""""""""""
" => Go section
""""""""""""""""""""""""""""""
au FileType go call GoSettings()
function! GoSettings()
  setl noexpandtab
  set ts=4  " Tabs are 4 spaces
  set shiftwidth=4  " Tabs under smart indent
endfunction


""""""""""""""""""""""""""""""
" => JavaScript section
"""""""""""""""""""""""""""""""
au FileType javascript call JavaScriptSettings()
function! JavaScriptSettings() 
    set makeprg=java\ org.mozilla.javascript.tools.shell.Main\ ~/bin/jslint.js\ %
    set errorformat=%f(%l):\ %m
    set ts=2  " Tabs are 4 spaces
    set shiftwidth=4  " Tabs under smart indent
    set cinoptions=:0,p0,t0
    set cinwords=if,else,while,do,for,switch,case
    set formatoptions=tcqr
    set cindent
endfunction


""""""""""""""""""""""""""""""
" => Edit vimrc
""""""""""""""""""""""""""""""
noremap <Leader>ev :e ~/.vimrc<CR>
noremap <Leader>sv :so ~/.vimrc<CR>

" When vimrc is edited, reload it
autocmd! bufwritepost vimrc source ~/.vimrc

" Programming helps to quickly navigate the soruce "
noremap <silent> <F1> :Ack <cword><CR>
noremap <silent> <F2> :ta <cword><CR>
noremap <silent> <F3> :tn<CR>
noremap <silent> <F4> :cn<CR>
noremap <silent> <F5> :!/usr/local/bin/ctags -R .<CR>
noremap <silent> <F6> :make<CR>
inoremap <silent> <F5> <C-O>:make<CR>

" Enable omni completion.
autocmd FileType scss setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType html setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Switch support
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap - :Switch<cr>
